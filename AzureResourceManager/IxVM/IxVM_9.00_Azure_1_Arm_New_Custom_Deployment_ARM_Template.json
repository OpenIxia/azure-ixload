{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
		"ImageResourceGroupName": {
			"defaultValue": "Ixia_VE_Azure_9.00",
			"type": "String"
		},
		"DiagnosticsStorageAccountName": {
			"defaultValue": "Ixia_VE_Diagnostics",
			"type": "String"
		},	
		"VnetAddressPrefix": {
			"defaultValue": "10.158.9.0/24",
			"type": "String"
		},
        "ManagementSubnetPrefix": {
			"defaultValue": "10.158.9.0/27",
			"type": "String"
		},
		"Test1SubnetPrefix": {
			"defaultValue": "10.158.9.64/27",
			"type": "String"
		},
		"ManagementSecurityRuleSourceIPPrefix": {
			"defaultValue": "42.42.42.42/32",
			"type": "String"
		},
		"VirtualTestAppliance1Eth0IpAddress": { 
			"defaultValue": "10.158.9.11",
			"type": "String"
		},
		"VirtualTestAppliance1Eth1IpAddresses": {
			"defaultValue": ["10.158.9.93"],
			"type": "Array"
		},
		"VirtualTestAppliance1Eth2IpAddresses": {
			"defaultValue": ["10.158.9.90"],
			"type": "Array"
		},
        "VirtualTestApplianceImageName": {
			"defaultValue": "Ixia_Virtual_Test_Appliance_9.00",
			"type": "String"
		},
		"VirtualTestApplianceVmSize": {
			"defaultValue": "Standard_F16s",
			"type": "String",
			"allowedValues": [
				"Standard_F16s",
				"Standard_F8s",
				"Standard_F4s"
			]
		},
		"OptionalVMPrefix": {
			"defaultValue": "Ixia_VE",
			"type": "String"
		},
		"UserEmailTag": {
			"defaultValue": "Optional-Email-Tag",
			"type": "String"
		},
		"UserProjectTag": {
			"defaultValue": "Optional-Project-Tag",
			"type": "String"
		}
	},
    "variables": {
        "apiVersion": "2018-06-01",
		"SubscriptionId" : "[subscription().subscriptionId]",
		"OptionalVMPrefix": "[parameters('OptionalVMPrefix')]",
		"UserEmailTag": "[parameters('UserEmailTag')]",
		"UserProjectTag": "[parameters('UserProjectTag')]",
		"ImageResourceGroupName": "[parameters('ImageResourceGroupName')]",
		"DiagnosticsStorageAccountName": "[parameters('DiagnosticsStorageAccountName')]",
        "VnetName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_VNET')]",
        "VnetAddressPrefix": "[parameters('VnetAddressPrefix')]",
		"ManagementSubnetName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_VNET_MGMT_SUBNET')]",
        "ManagementSubnetPrefix": "[parameters('ManagementSubnetPrefix')]",
        "Test1SubnetName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_VNET_TEST1_SUBNET')]",
        "Test1SubnetPrefix": "[parameters('Test1SubnetPrefix')]",
        "MgmtNetworkSecurityGroupName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_NETWORK_SECURITY_GROUP')]",
        "Test1NetworkSecurityGroupName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_TEST1_NETWORK_SECURITY_GROUP')]",  	
        "MgmtSshSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_SSH_RULE')]",
        "MgmtHttpSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_WEB_RULE')]",
        "MgmtHttpsSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_HTTPS_RULE')]",
        "MgmtRdpSecurityRuleName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_RDP_RULE')]",
        "ManagementSecurityRuleSourceIPPrefix": "[parameters('ManagementSecurityRuleSourceIPPrefix')]",
        "VirtualTestAppliance1Eth0Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH0')]",
        "VirtualTestAppliance1Eth1Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH1')]",
        "VirtualTestAppliance1Eth2Name": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_IXLOAD_VIRTUALTESTAPPLIANCE1_ETH2')]",
		"VirtualTestAppliance1Eth0IpAddress": "[parameters('VirtualTestAppliance1Eth0IpAddress')]",
		"VirtualTestAppliance1Eth1IpAddresses": "[parameters('VirtualTestAppliance1Eth1IpAddresses')]",
		"VirtualTestAppliance1Eth2IpAddresses": "[parameters('VirtualTestAppliance1Eth2IpAddresses')]",
        "VirtualTestAppliance1Name": "[concat(variables('OptionalVMPrefix'), '-', 'IXIA-AZURE-IXLOAD-VIRTUALTESTAPPLIANCE1')]",
		"VirtualTestAppliance1DnsLabel": "[concat(toLower(variables('OptionalVMPrefix')), '-', toLower(replace(resourceGroup().name, '_', '-')), '-', 'ixia-ixload-virtualtestappliance-1', '-', substring(uniqueString(resourceGroup().id),0,6))]",
        "VirtualTestApplianceEnableAcceleratedNetworking": true,
        "VirtualTestApplianceEnableIPForwarding": true,
		"VirtualTestApplianceDisablePasswordAuthentication": true,
		"VirtualTestApplianceProvisionVMAgent": false,
		"VirtualTestApplianceBootDiagnosticsEnabled": true,
        "VirtualTestApplianceVmSize": "[parameters('VirtualTestApplianceVmSize')]",
		"VirtualTestApplianceDiskSizeGB": "14",
        "MgmtPublicIpAddressName": "[concat(variables('OptionalVMPrefix'), '_', 'IXIA_AZURE_MGMT_PUBLIC_IP')]",
        "VirtualTestApplianceImageName": "[parameters('VirtualTestApplianceImageName')]",
		"VirtualTestApplianceImageId": "[concat('/subscriptions/', variables('SubscriptionId'), '/resourceGroups/', variables('ImageResourceGroupName'), '/providers/Microsoft.Compute/images/', variables('VirtualTestApplianceImageName'))]",		
		"VirtualTestApplianceCreateOption": "FromImage",		
		"AdminUserName": "Ixia-Admin",
		"SshPublicKeyData": "ssh-rsa",
		"SshKeyPath": "[concat('/home/',variables('AdminUserName'),'/.ssh/authorized_keys')]"
	},
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VnetName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('VnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('ManagementSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('ManagementSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('Test1SubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('Test1SubnetPrefix')]"
                        }
                    }
                ],
                "virtualNetworkPeerings": []
            },
            "dependsOn": []
        },    

        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('VnetName'), '/', variables('ManagementSubnetName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "scale": null,
            "properties": {
                "addressPrefix": "[variables('ManagementSubnetPrefix')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]"
            ]
        },

        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('VnetName'), '/', variables('Test1SubnetName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "scale": null,
            "properties": {
                "addressPrefix": "[variables('Test1SubnetPrefix')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VnetName'))]"
            ]
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('MgmtNetworkSecurityGroupName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('MgmtHttpsSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTPS",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtSshSecurityRuleName')]",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtHttpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "[variables('MgmtRdpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 103,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        }, 

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('Test1NetworkSecurityGroupName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
				"Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "securityRules": [
                    {
                        "name": "[variables('MgmtHttpSecurityRuleName')]",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[variables('ManagementSecurityRuleSourceIPPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 102,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
                   
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VirtualTestAppliance1Eth0Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth0IpAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('ManagementSubnetName'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('VirtualTestApplianceEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('VirtualTestApplianceEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]"
                },
                "primary": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('ManagementSubnetName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('MgmtNetworkSecurityGroupName'))]"
            ]
        },      
 
       {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VirtualTestAppliance1Eth1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth1IpAddresses')[0]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('Test1SubnetName'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('VirtualTestApplianceEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('VirtualTestApplianceEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
                },
                "primary": false
            },
            "dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('Test1SubnetName'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
            ]
        },

       {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VirtualTestAppliance1Eth2Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
			    "Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('VirtualTestAppliance1Eth2IpAddresses')[0]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('Test1SubnetName'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "enableAcceleratedNetworking": "[variables('VirtualTestApplianceEnableAcceleratedNetworking')]",
                "enableIPForwarding": "[variables('VirtualTestApplianceEnableIPForwarding')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
                },
                "primary": false
            },
            "dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VnetName'), variables('Test1SubnetName'))]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('Test1NetworkSecurityGroupName'))]"
            ]
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('VirtualTestAppliance1Name')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[resourceGroup().location]",
            "scale": null,
			"tags": {
				"Owner": "[variables('UserEmailTag')]",
				"Project": "[variables('UserProjectTag')]",
				"ResourceGroup": "[resourceGroup().name]",
				"Location": "[resourceGroup().location]"
			},
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('VirtualTestApplianceVmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[variables('VirtualTestApplianceImageId')]"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat('disk_', variables('VirtualTestAppliance1Name'))]",
                        "createOption": "[variables('VirtualTestApplianceCreateOption')]",
                        "caching": "ReadWrite",
                        "diskSizeGB": "[variables('VirtualTestApplianceDiskSizeGB')]"
                    },
                    "dataDisks": []
                },
				"osProfile": {
					"computerName": "[variables('VirtualTestAppliance1Name')]",
					"adminUsername": "[variables('AdminUserName')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": "[variables('VirtualTestApplianceDisablePasswordAuthentication')]",
						"provisionVMAgent": "[variables('VirtualTestApplianceProvisionVMAgent')]",
						"ssh": {
						  "publicKeys": [
							{
							  "path": "[variables('SshKeyPath')]",
							  "keyData": "[variables('SshPublicKeyData')]"
							}
						  ]
						}
					}
				},
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth0Name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth1Name'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth2Name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('VirtualTestApplianceBootDiagnosticsEnabled')]",
                        "storageUri": "[concat('https', '://', variables('DiagnosticsStorageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth0Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth1Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('VirtualTestAppliance1Eth2Name'))]"
            ]
        }
    ]
}
